

public class MiniLivro extends Livro {
    public MiniLivro(String nome, String descricao, double valor, String isbn, Autor autor) {
        super(nome, descricao, valor, isbn, autor);
    }


    @Override
    public boolean aplicaDescontode(double porcentagem) {
        System.out.println("MiniLivro não pode receber descontos!");
        return false;
    }

}







public class Ebook extends Livro {
    private String watermark;
 
    public Ebook(String nome, String descricao, double valor, String isbn, Autor autor, String watermark) {
        super(nome, descricao, valor, isbn, autor);
        this.watermark = watermark;
    }
 
    @Override
    public boolean aplicaDescontode(double porcentagem) {
        if (porcentagem > 0.15) {
            System.out.println("O desconto não pode exceder 15%!");
            return false;
        }
        return super.aplicaDescontode(porcentagem);
    }
 
    @Override
    public String toString() {
        return "Ebook{" +
                "watermark='" + watermark + '\'' +
                ", detalhes=" + super.toString() +
                '}';
    }
 }
 






 
public abstract class Livro {       /*definiu a classe livro como abstrata, ela sera so um parametro do que livro tem que ter, mas o livro so pode ser dos tipos filhos, fisico ou ebook */
    private String nome;
    private String descricao;
    private double valor;
    private String isbn;
    private Autor autor;

    public Livro(String nome, String descricao, double valor, String isbn, Autor autor) {
        this.nome = nome;
        this.descricao = descricao;
        this.isbn = isbn;
        this.valor = valor;
        this.autor = autor;
    }

    public boolean aplicaDescontode(double porcentagem) {
        if (porcentagem > 0.3) {
            return false;
        }
        this.valor -= this.valor * porcentagem;
        System.out.println("Desconto de " + porcentagem + "  ||||  Valor novo= " +  getvalor());
        return true;
    }

    public String getnome() {
        return nome;
    }

    public String getdescricao() {
        return descricao;
    }

    public double getvalor() {
        return valor;
    }

    public String getisbn() {
        return isbn;
    }

    public Autor getautor() {
        return autor;
    }


    public void setvalor(double valor) {
        this.valor = valor;
    }
    /*tem que ter tanto get porque os atributos sao privados, entao nao da para acessar com obj.tal, mas sim obj.gettal */


    public void mostra() {
        System.out.println("nome: " + this.nome);
        System.out.println("descrição: " + this.descricao);
        System.out.println("valor: " + this.valor);
        System.out.println("isbn: " + this.isbn);
        System.out.println("autor: " + this.autor);
    }


    /*Quando você tenta imprimir um objeto, o Java chama o método toString() de forma automática. Se você não fornecer uma implementação customizada desse método, a implementação padrão da classe Object será usada, o que normalmente resulta em uma saída como a que você está vendo, que inclui o nome da classe e a referência de memória do objeto.*/


    @Override
    public String toString() {
    return "Livro{" +
           "titulo='" + getnome() + '\'' +
           ", descricao='" + getdescricao() + '\'' +
           ", preco=" + getvalor() +
           ", isbn='" + getisbn() + '\'' +
           ", autor=" + getautor().getNome() +
           '}';
    }



}







public class LivroDidatico extends Livro {
    /*private double descontoEducacional;*/
    
    public LivroDidatico(String nome, String descricao, double valor, String isbn, Autor autor, double descontoEducacional){
        super(nome, descricao, valor, isbn, autor);
        /*this.descontoEducacional = descontoEducacional;*/
    }


    @Override
    public boolean aplicaDescontode(double porcentagem) {
        if (porcentagem > 0.15) {
            System.out.println("O desconto não pode exceder 15%!");
            return false;
        }
        return super.aplicaDescontode(porcentagem);
    }
    

    public void aplicaDescontoEducacional(double desconto){
        if (desconto > 100 || desconto < 0){
            System.out.println("O desconto é inválido!");
        }
        else{
            this.setvalor( this.getvalor() - this.getvalor() * desconto) ;
            System.out.println("O novo preço é: " + this.getvalor());

        }


    }

    @Override
    public String toString(){
        return "LivroDidatico{" +
        "descontoEducacional='" + '\'' +
        ", detalhes=" + super.toString() +
        '}';     
    }
}








public class LivroFisico extends Livro {
    public LivroFisico(String nome, String descricao, double valor, String isbn, Autor autor) {
        super(nome, descricao, valor, isbn, autor);
    }


    public double getTaxaImpressao() {
        return this.getvalor() * 0.05;
    }


    @Override
    public String toString(){
        return "LivroFisico{" +
        super.toString() +
        '}';     
    }

    
}








public class Main {
    public static void main(String[] args) {
        
        
        Autor au1 = new Autor("Alberto Marlos", 170);
        Autor au2 = new Autor("Pato Ronald", 170);

        Livro l1 = new LivroFisico(
                "Flores e Sapos",
                "A flor olhava para o sapo todos os dias, e o sapo olhava para a flor todos os dias.",
                300.00,
                "10",
                au1);

        Livro l2 = new LivroFisico(
                "Segredo Secreto",
                "Não pode contar o segredo",
                700.00,
                "11",
                au1);

        Ebook e1 = new Ebook(
                "Cola Colada",
                "As páginas estão coladas",
                900.00,
                "12",
                au1,
                "PDF");

        Ebook e2 = new Ebook(
                "Silêncio",
                "",
                5000.00,
                "13",
                au1,
                "EPUB");

        LivroDidatico ld1 = new LivroDidatico(
                "Cavaleiros do Zodiaco completo", 
                "completo!", 
                8000.0, "44", 
                au1, 
                100);

        MiniLivro ml1 = new MiniLivro("Faroeste BR", "No Oeste BR", 100, "343", au2);

        /*         
        l1.aplicaDescontode(0.10);
        l2.aplicaDescontode(0.10);
        e1.aplicaDescontode(0.10);
        e2.aplicaDescontode(0.10);

        ld1.aplicaDescontode(0.10);
        ld1.aplicaDescontoEducacional(0.50);

        
        */



        CarrinhoDeCompras car1 = new CarrinhoDeCompras();
        car1.adiciona(l2);
        car1.adiciona(l1);
        car1.adiciona(ml1);

        car1.mostra(car1);

        



    }
}








public class CarrinhoDeCompras {
    double total;




    public double gettotal() {
        return total;
    }

    public void adiciona(Livro livro) {
        System.out.println("Adicionando: " + livro);
        livro.aplicaDescontode(0.2);
        total += livro.getvalor();
    }


    public void mostra(CarrinhoDeCompras car){
        System.out.println("Total: " + car.gettotal());
    }




    
    /*public void adiciona(LivroFisico livro) {
        System.out.println("Adicionando: " + livro);
        livro.aplicaDescontode(0.05);
        total += livro.getvalor();
    }

    public void adiciona(Ebook livro) {
        System.out.println("Adicionando: " + livro);
        total += livro.getvalor();
    }*/
    


}





public class Autor {
    String nome;
    int idade;

    public Autor(String nome, int idade) {
        this.nome = nome;
        this.idade = idade;
    }

    public String getNome() {
        return nome;
    }

    public int getIdade() {
        return idade;
    }

    @Override
    public String toString() {
        return "Autor{" +
                "nome='" + nome + '\'' +
                ", idade=" + idade +
                '}';
    }
}